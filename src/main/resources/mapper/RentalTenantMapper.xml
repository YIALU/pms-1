<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

    <mapper namespace="com.mioto.pms.module.rental.dao.RentalTenantDao">

    <resultMap id="rentalTenantResultMap" type="com.mioto.pms.module.rental.model.RentalTenant">
        <id property="id" column="t_id" jdbcType="INTEGER"/>
        <result property="rentalId" column="t_rental_id"/>
        <result property="tenantId" column="t_tenant_id"/>
    </resultMap>

    <sql id="rentalTenantAliasColumns">
        t.`id` as t_id,
        t.`rental_id` as t_rental_id,
        t.`tenant_id` as t_tenant_id
    </sql>

    <insert id="insert">
        insert into rental_tenant
        (`id`,`rental_id`,`tenant_id`)
        values
        (#{id},#{rentalId},#{tenantId})
    </insert>

    <insert id="insertIgnoreNull" useGeneratedKeys="true" keyProperty="id" parameterType="com.mioto.pms.module.rental.model.RentalTenant">
        insert into rental_tenant
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="rentalId != null">
                `rental_id`,
            </if>
            <if test="tenantId != null">
                `tenant_id`,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="rentalId != null">
                #{rentalId},
            </if>
            <if test="tenantId != null">
                #{tenantId},
            </if>
        </trim>
    </insert>

    <update id="update">
        update rental_tenant
        set `rental_id` = #{rentalId},`tenant_id` = #{tenantId}
        where id = #{id}
    </update>

    <update id="updateIgnoreNull">
        update rental_tenant
        <trim prefix="SET" suffixOverrides=",">
            <if test="rentalId != null">
                `rental_id` = #{rentalId},
            </if>
            <if test="tenantId != null">
                `tenant_id` = #{tenantId},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteByColumn">
        delete from rental_tenant where ${column} = #{value}
    </delete>

    <delete id="batchDelete">
        delete from rental_tenant where id in
        <foreach collection="array" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <select id="findByColumn" resultMap="rentalTenantResultMap">
        SELECT <include refid="rentalTenantAliasColumns"/> FROM rental_tenant t where t.${column} = #{value}
    </select>

    <select id="findList" resultMap="rentalTenantResultMap">
        SELECT <include refid="rentalTenantAliasColumns"/> FROM rental_tenant t
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id != null and id != ''">
                AND t.id = #{id}
            </if>
            <if test="rentalId != null and rentalId != ''">
                AND t.rental_id = #{rentalId}
            </if>
            <if test="tenantId != null and tenantId != ''">
                AND t.tenant_id = #{tenantId}
            </if>
        </trim>
    </select>

</mapper>